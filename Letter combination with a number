class Solution {
    private:
    void solve(string digits,vector<string>&ans,int index,string op,string mapping[])
    {
        if(index>=digits.length())
        {
            ans.push_back(op);
            return;
        }
        int number=digits[index]-'0';
        string val= mapping[number];
        for(int i=0;i<val.length();i++)
        {
            op.push_back(val[i]);
            solve(digits,ans,index+1,op,mapping);
            op.pop_back();
        }
    }
public:
    vector<string> letterCombinations(string digits) {
        vector<string>ans;
        if(digits.length()==0)
            return ans;
        string op="";
        int index=0;
        string mapping[10]={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        solve(digits,ans,index,op,mapping);
        return ans;
    }
};
